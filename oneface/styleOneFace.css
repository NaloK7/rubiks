* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;

  /* variable */
  --square-size: 100px;
}

#displayValue {
  height: 55px;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
aside {
  display: flex;
  flex-direction: column;
}
.container {
  /* canvas to display the cube */
  width: calc(var(--square-size) * 6);
  height: calc(var(--square-size) * 6);
  /* center horizontally */
  margin: auto;
  /* create perspective and preserve 3D  */
  perspective: 1000px;
  transform-style: preserve-3d;
}

.cube {
  /* use to create a reference point in center of the cube */
  width: var(--square-size);
  height: var(--square-size);
  /* center the cube in the canvas */
  position: absolute;
  margin: auto;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;

  transform-style: preserve-3d;
  /* start position of the cube */
  transform: rotateX(-20deg) rotateY(20deg) rotateZ(0deg);
}

.square {
  width: var(--square-size);
  height: var(--square-size);
  position: absolute;
  background-color: black;
}
.square span {
  /* display: flex; */
  text-align: center;
  border-radius: 10%;
  position: absolute;
  margin: auto;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  width: 95%;
  height: 95%;
}

/* FRONT */

.blue {
  background-color: rgb(72, 72, 253);
}
/* top */
.Ftl {
  /* transform: rotate3d(0, 0, 0, 90deg) translate3d(-100px, -100px, 150px); */
  transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) translate3d(-100px, -100px, 150px);
}
.Ftc {
  transform: rotate3d(0, 0, 0, 90deg) translate3d(0px, -100px, 150px);
}
.Ftr {
  transform: rotate3d(0, 0, 0, 90deg) translate3d(100px, -100px, 150px);
}
/* middle */
.Fml {
  transform: rotate3d(0, 0, 0, 90deg) translate3d(-100px, 0px, 150px);
}
.Fmc {
  transform: rotate3d(0, 0, 0, 90deg) translate3d(0px, 0px, 150px);
}
.Fmr {
  transform: rotate3d(0, 0, 0, 90deg) translate3d(100px, 0px, 150px);
}
/* bottom */
.Fbl {
  transform: rotate3d(0, 0, 0, 90deg) translate3d(-100px, 100px, 150px);
}
.Fbc {
  transform: rotate3d(0, 0, 0, 90deg) translate3d(0px, 100px, 150px);
}
.Fbr {
  transform: rotate3d(0, 0, 0, 90deg) translate3d(100px, 100px, 150px);
}

/*  */

/* RIGHT */
.orange {
  background-color: orange;
}
/* top */
.Rtl {
  transform: rotate3d(0, 1, 0, 90deg) translate3d(-100px, -100px, 150px);
}
.Rtc {
  transform: rotate3d(0, 1, 0, 90deg) translate3d(0px, -100px, 150px);
}
.Rtr {
  transform: rotate3d(0, 1, 0, 90deg) translate3d(100px, -100px, 150px);
}
/* middle */
.Rml {
  transform: rotate3d(0, 1, 0, 90deg) translate3d(-100px, 0px, 150px);
}
.Rmc {
  transform: rotate3d(0, 1, 0, 90deg) translate3d(0px, 0px, 150px);
}
.Rmr {
  transform: rotate3d(0, 1, 0, 90deg) translate3d(100px, 0px, 150px);
}
/* bottom */
.Rbl {
  transform: rotate3d(0, 1, 0, 90deg) translate3d(-100px, 100px, 150px);
}
.Rbc {
  transform: rotate3d(0, 1, 0, 90deg) translate3d(0px, 100px, 150px);
}
.Rbr {
  transform: rotate3d(0, 1, 0, 90deg) translate3d(100px, 100px, 150px);
}

/*  */

/* BACK */
.green {
  background-color: green;
}
/* top */
.Btl {
  transform: rotate3d(0, 1, 0, 180deg) translate3d(-100px, -100px, 150px);
}
.Btc {
  transform: rotate3d(0, 1, 0, 180deg) translate3d(0px, -100px, 150px);
}
.Btr {
  transform: rotate3d(0, 1, 0, 180deg) translate3d(100px, -100px, 150px);
}
/* middle */
.Bml {
  transform: rotate3d(0, 1, 0, 180deg) translate3d(-100px, 0px, 150px);
}
.Bmc {
  transform: rotate3d(0, 1, 0, 180deg) translate3d(0px, 0px, 150px);
}
.Bmr {
  transform: rotate3d(0, 1, 0, 180deg) translate3d(100px, 0px, 150px);
}
/* bottom */
.Bbl {
  transform: rotate3d(0, 1, 0, 180deg) translate3d(-100px, 100px, 150px);
}
.Bbc {
  transform: rotate3d(0, 1, 0, 180deg) translate3d(0px, 100px, 150px);
}
.Bbr {
  transform: rotate3d(0, 1, 0, 180deg) translate3d(100px, 100px, 150px);
}

/*  */

/* LEFT */
.red {
  background-color: red;
}
/* top */
.Ltl {
  transform: rotate3d(0, 1, 0, 270deg) translate3d(-100px, -100px, 150px);
}
.Ltc {
  transform: rotate3d(0, 1, 0, 270deg) translate3d(0px, -100px, 150px);
}
.Ltr {
  /* transform: rotate3d(0, 1, 0, 270deg) translate3d(100px, -100px, 150px); */
  transform: rotateX(0deg) rotateY(270deg) rotateZ(0deg) translateX(100px) translateY(-100px) translateZ(150px);
}
/* middle */
.Lml {
  transform: rotate3d(0, 1, 0, 270deg) translate3d(-100px, 0px, 150px);
}
.Lmc {
  transform: rotate3d(0, 1, 0, 270deg) translate3d(0px, 0px, 150px);
}
.Lmr {
  transform: rotate3d(0, 1, 0, 270deg) translate3d(100px, 0px, 150px);
}
/* bottom */
.Lbl {
  transform: rotate3d(0, 1, 0, 270deg) translate3d(-100px, 100px, 150px);
}
.Lbc {
  transform: rotate3d(0, 1, 0, 270deg) translate3d(0px, 100px, 150px);
}
.Lbr {
  transform: rotate3d(0, 1, 0, 270deg) translate3d(100px, 100px, 150px);
}

/*  */

/* UP */
.white {
 
  background-color: white;
}
/* top */
.Utl {
  transform: rotate3d(1, 0, 0, 90deg) translate3d(-100px, -100px, 150px);
}
.Utc {
  transform: rotate3d(1, 0, 0, 90deg) translate3d(0px, -100px, 150px);
}
.Utr {
  transform: rotate3d(1, 0, 0, 90deg) translate3d(100px, -100px, 150px);
}
/* middle */
.Uml {
  transform: rotate3d(1, 0, 0, 90deg) translate3d(-100px, 0px, 150px);
}
.Umc {
  transform: rotate3d(1, 0, 0, 90deg) translate3d(0px, 0px, 150px);
}
.Umr {
  transform: rotate3d(1, 0, 0, 90deg) translate3d(100px, 0px, 150px);
}
/* bottom */
.Ubl {
  transform: rotate3d(1, 0, 0, 90deg) translate3d(-100px, 100px, 150px);
}
.Ubc {
  transform: rotate3d(1, 0, 0, 90deg) translate3d(0px, 100px, 150px);
}
.Ubr {
  transform: rotate3d(1, 0, 0, 90deg) translate3d(100px, 100px, 150px);
}

/*  */

/* DOWN */
.yellow {
  background-color: yellow;
}
/* top */
.Dtl {
  transform: rotate3d(-1, 0, 0, 90deg) translate3d(-100px, -100px, 150px);
}
.Dtc {
  transform: rotate3d(-1, 0, 0, 90deg) translate3d(0px, -100px, 150px);
}
.Dtr {
  transform: rotate3d(-1, 0, 0, 90deg) translate3d(100px, -100px, 150px);
}
/* middle */
.Dml {
  transform: rotate3d(-1, 0, 0, 90deg) translate3d(-100px, 0px, 150px);
}
.Dmc {
  transform: rotate3d(-1, 0, 0, 90deg) translate3d(0px, 0px, 150px);
}
.Dmr {
  transform: rotate3d(-1, 0, 0, 90deg) translate3d(100px, 0px, 150px);
}
/* bottom */
.Dbl {
  transform: rotate3d(-1, 0, 0, 90deg) translate3d(-100px, 100px, 150px);
}
.Dbc {
  transform: rotate3d(-1, 0, 0, 90deg) translate3d(0px, 100px, 150px);
}
.Dbr {
  transform: rotate3d(-1, 0, 0, 90deg) translate3d(100px, 100px, 150px);
}
